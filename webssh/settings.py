# -*- coding: utf-8 -*-
"""
Django settings for webssh project.

Generated by 'django-admin startproject' using Django 1.11.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#5xvrjzddr3@qqxr@2&k2a9gt+q_eclit*uu^odd0_dw(w5-9@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap3',
    'cmdb.apps.CmdbConfig',
    'channels',  # websocket
    'readonly',  # Django添加只读权限
    # 'gslb',  # PowerGSLB
    # 'grafana',  # Grafana
    # 'django_otp',
    # 'django_otp.plugins.otp_totp',  # 时间戳
]

LOGIN_URL = '/login'

# # AUTH_USER_MODEL = 'cmdb.UserProfile'
# AUTH_PROFILE_MODULE = 'cmdb.UserProfile'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'webssh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webssh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

try:
    import psycopg2
    # 默认使用PostgreSQL
    engine = 'django.db.backends.postgresql_psycopg2'
    options = {}

except:
    # import MySQLdb
    # conn = MySQLdb.connect(user=db['USER'], db=db['NAME'], passwd=db['PASSWORD'], host=db['HOST'])
    # conn.ping()
    # conn.close()

    # 使用MySQL
    engine = 'django.db.backends.mysql'
    options = {'charset': 'utf8', 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"}

    from django.db.backends.mysql.base import DatabaseFeatures
    DatabaseFeatures.supports_microsecond_precision = False  # mysql5.6+ 时间不要毫秒


user = 'xyf'
password = 'xyf2017'
host = '127.0.0.1'

DATABASES = {
    'default': {
        'ENGINE': engine,
        'NAME': 'xyf',
        'USER': user,
        'PASSWORD': password,
        'HOST': host,
        # 'PORT': '5432',
        # 'TEST': {'NAME': 'test',},
        'OPTIONS': options,
    },

    # 'gslb': {
    #     # PowerGSLB 智能DNS解析数据库
    #     # 看得PowerGSLB各数据表名直接写在其源码中，不支持表名前缀，
    #     # 为兼容和PowerGSLB共享使用和管理方便，使用独立数据库
    #     'ENGINE': engine,
    #     'NAME': 'powergslb',
    #     'USER': user,
    #     'PASSWORD': password,
    #     'HOST': host,
    #     'OPTIONS': options,
    # }


}

# DATABASE_ROUTERS = ['xyf.db_router.PowerGSLB']
# DATABASE_APPS_MAPPING = {
#     'gslb': 'gslb',
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'


USE_I18N = True

USE_L10N = True

USE_TZ = False


STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)


REDIS = ['127.0.0.1:6379', 'sdj2017']

# Channels settings
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",  # use redis backend
        "CONFIG": {
            "hosts": ['redis://:%s@%s' % (REDIS[1], REDIS[0]), ],  # set redis address
            "channel_capacity": {
                "http.request": 1000,
                "websocket.send*": 10000,
            },
            "capacity": 10000,
        },
        # "BACKEND": "asgiref.inmemory.ChannelLayer",  #开发环境中使用内存就可以了
        # "BACKEND": "asgi_ipc.IPCChannelLayer",       #daphne和runworker不在同一服务器时不支持
        "ROUTING": "webssh.routing.channel_routing",    # 定义channel的根入口
    },
}


CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS[0],
        'OPTIONS': {
            # 'DB': 10,
            'PASSWORD': REDIS[1],
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'PARSER_CLASS': 'redis.connection.HiredisParser',
            'CONNECTION_POOL_CLASS': 'redis.BlockingConnectionPool',
            'CONNECTION_POOL_CLASS_KWARGS': {
                'max_connections': 200,
                'timeout': 10,
            },
        },
        'KEY_PREFIX': 'xyf'
    }
}

BOOTSTRAP3 = {
    # 修改bootstrap3.bootstrap.BOOTSTRAP3_DEFAULTS默认设置
    # 'horizontal_label_class': 'col-md-2', #默认为col-md-3
    # 'horizontal_field_class': 'col-md-8',
}
